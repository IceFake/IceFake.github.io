<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://IceFake.github.io/</id>
    <title>IceFake&apos;s Blog</title>
    <updated>2020-10-23T14:20:12.767Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://IceFake.github.io/"/>
    <link rel="self" href="https://IceFake.github.io/atom.xml"/>
    <subtitle>Lovelotus</subtitle>
    <logo>https://IceFake.github.io/images/avatar.png</logo>
    <icon>https://IceFake.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, IceFake&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[10.23学习总结]]></title>
        <id>https://IceFake.github.io/post/psw-Vn-cY/</id>
        <link href="https://IceFake.github.io/post/psw-Vn-cY/">
        </link>
        <updated>2020-10-23T07:24:47.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>100 + 100 + 40 + 0</p>
<p><strong>T1</strong>：找中位数。<br>
貌似 O(n) 过掉了。。。<br>
<s><code>nth_element</code> 是个好东西</s></p>
<p><strong>T2</strong>：树形dp。<br>
考虑枚举每一个连通块的最小值，并将其设为根节点跑树形dp。<br>
用dp数组记录方案数，转移：</p>
<pre><code class="language-cpp">dp[x] *= dp[v] + 1
</code></pre>
<p><strong>T3</strong>：二分。<br>
写了个优先队列，预计拿80pts，结果前4个点挂了。。。</p>
<p><strong>T4</strong>：线段树。<br>
看到题目后，花了2个小时，洋洋洒洒敲了200+行的代码，然后炸了，zbl<br>
<img src="https://s1.ax1x.com/2020/10/23/BEdEp8.png" alt="" loading="lazy"></p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>晚上 <strong>Xinxie</strong> 推了一道构造题，WA了3次然后把它过了，细节的处理不到位。（见<strong>做题记录</strong><br>
重新看了一下状压dp。。。<br>
练了一下最短路的板子，为明天复习最短路和二分图做准备。。。</p>
<p>感觉今天效率并不高。。。有点犯困。</p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CF55D Beautiful numbers 题解]]></title>
        <id>https://IceFake.github.io/post/J7y1Lr0V5/</id>
        <link href="https://IceFake.github.io/post/J7y1Lr0V5/">
        </link>
        <updated>2020-10-22T11:37:54.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/55/problem/D">题目传送门(原OJ)</a><br>
<a href="https://www.luogu.com.cn/problem/CF55D">题目传送门(洛谷(有翻译))</a></p>
<p>首先看到数据范围，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><mi>e</mi><mn>18</mn></mrow><annotation encoding="application/x-tex">9e18</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord mathdefault">e</span><span class="mord">1</span><span class="mord">8</span></span></span></span>，再看题面，很明显的数位DP。</p>
<h2 id="需要注意的地方">需要注意的地方：</h2>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 可以整除所有数。。。<br>
答案可能会大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>18</mn></mrow><annotation encoding="application/x-tex">18</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span></span></span></span> 位，所以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span></span></span></span> 存不下！！！</p>
<h2 id="分析">分析</h2>
<p>然后我们先确定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span></span></span> 数组的下标，显然是一个三维的数组 —— <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mi>p</mi><mi>o</mi><mi>s</mi><mo>]</mo><mo>[</mo><mi>r</mi><mi>a</mi><mi>r</mi><mo>]</mo><mo>[</mo><mi>s</mi><mi>t</mi><mi>a</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[pos][rar][sta]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mclose">]</span></span></span></span>。</p>
<blockquote>
<p>我们用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">pos</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span></span></span></span> 表示当前位数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>a</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">rar</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 压缩一个状态，当先数位上有哪些数字，用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">sta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span></span></span></span> 来表示原数。</p>
</blockquote>
<p>但很显然，直接存 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">sta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span></span></span></span> 是存不下的，于是我们想到了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">mod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span></span></span></span>，那么我们将<strong>模数</strong>设为什么好呢？—— <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mtext> </mtext><mn>9</mn></mrow><annotation encoding="application/x-tex">1~9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace nobreak"> </span><span class="mord">9</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>c</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">lcm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">c</span><span class="mord mathdefault">m</span></span></span></span> 也就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2520</mn></mrow><annotation encoding="application/x-tex">2520</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">2</span><span class="mord">0</span></span></span></span>。</p>
<p>于是我定义了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mn>20</mn><mo>]</mo><mo>[</mo><mn>1024</mn><mo>]</mo><mo>[</mo><mn>2521</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[20][1024][2521]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord">2</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">2</span><span class="mord">5</span><span class="mord">2</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，经过计算后发现大概是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>51</mn><mo separator="true">,</mo><mn>630</mn><mo separator="true">,</mo><mn>080</mn></mrow><annotation encoding="application/x-tex">51,630,080</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mord">3</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">8</span><span class="mord">0</span></span></span></span>，也就是说只要开 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span></span></span></span> 就不会炸空间，于是我就很高兴的开了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span></span></span></span> 。。。</p>
<blockquote>
<p>“于是它飞快地 WA 掉了”—— 某dalao</p>
</blockquote>
<p>后来发现了答案可能很大。。。其实将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2520</mn></mrow><annotation encoding="application/x-tex">2520</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">2</span><span class="mord">0</span></span></span></span> 进行离散化，但我 <s>实在太弱了。。。没想到</s> 发现对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 都是可以不计入状态中的，因为任意一个数（非 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> ）都可以被它们整除。所以我们就可以将第二位的上限改为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>512</mn></mrow><annotation encoding="application/x-tex">512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span>，大小变成了原来的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 我们就可以开 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><mi>n</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>n</mi><mi>g</mi></mrow><annotation encoding="application/x-tex">long long</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span> 啦。 <s><code>#define int long long</code></s></p>
<p>然后我们确定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">dfs</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">s</span></span></span></span> 中的形参，很显然就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">，</mi><mi>r</mi><mi>a</mi><mi>r</mi><mi mathvariant="normal">，</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">，</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">pos，rar，sta，limit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">limit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span> 表示是否到达上限。至于前导零的判断，本题并不需要。</p>
<p>那么我们就有两种转移，当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时：（ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">up</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mord mathdefault">p</span></span></span></span> 表示上限）</p>
<pre><code class="language-cpp">tem += dfs(pos - 1, rar, (sta * 10 + i) % MOD, (i == up) &amp;&amp; limit);
</code></pre>
<p>而当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>≤</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">2 \leq i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 时：（ <s>不会打 $ <s>latex</s> $ 的大于等于 QAQ</s></p>
<pre><code class="language-cpp">tem += dfs(pos - 1, rar | (1 &lt;&lt; (i - 2)), (sta * 10 + i) % MOD, (i == up) &amp;&amp; limit);
</code></pre>
<h2 id="下面放上代码实测-ac">下面放上代码（实测 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">AC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span></h2>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
#define int long long
#define inc(i) (++ (i))
#define dec(i) (-- (i))
#define Rep(i, a, b) for(register int i = (a) , i##Limit = (b) ; i &lt;= i##Limit ; inc(i))
#define Dep(i, a, b) for(register int i = (a) , i##Limit = (b) ; i &gt;= i##Limit ; dec(i))

using namespace std;

const int MOD = 2520;
int a, b, T;
int res[21], dp[20][512][2521];

int dfs(int pos, int rar, int sta, bool limit) {
	if(!pos) {
		int num = 1;
		while(rar) {
			inc(num);
			if(rar &amp; 1 &amp;&amp; sta % num != 0) return 0;
			rar &gt;&gt;= 1;
		}
		return 1;
	}
	if(dp[pos][rar][sta] != -1 &amp;&amp; !limit) return dp[pos][rar][sta];
	int up, tem = 0;
	if(limit) up = res[pos];
	else up = 9;
	Rep(i,0,up) {
		if(i &lt;= 1) tem += dfs(pos - 1, rar, (sta * 10 + i) % MOD, (i == up) &amp;&amp; limit);
		else tem += dfs(pos - 1, rar | (1 &lt;&lt; (i - 2)), (sta * 10 + i) % MOD, (i == up) &amp;&amp; limit);
	}
	if(!limit) dp[pos][rar][sta] = tem;
	return tem;
}

int solve(int x) {
	int pos = 0;
	while(x) {
		res[inc(pos)] = x % 10;
		x /= 10; 
	}
	return dfs(pos, 0, 0, 1);
}

signed main()
{
	cin&gt;&gt;T;
	memset(dp, -1, sizeof(dp));
	while(T --) {
		cin&gt;&gt;a&gt;&gt;b;
		printf(&quot;%lld\n&quot;, solve(b) - solve(a - 1));
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.22学习总结]]></title>
        <id>https://IceFake.github.io/post/BgUtZ2TRQ/</id>
        <link href="https://IceFake.github.io/post/BgUtZ2TRQ/">
        </link>
        <updated>2020-10-22T06:39:40.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>100 + 100 + 0 + 100 = 300</p>
<p><strong>T1</strong>：结论题。套一个求gcd的就过了。<br>
不过这个大样例给了两个互质的数，差点一举通过大样例，全 WA 。</p>
<p><strong>T2</strong>：优先队列维护反悔贪心。<br>
记得判一下负的快乐值，（大样例不判也能过。。。</p>
<p><strong>T3</strong>：图论题。<br>
考场上想了3个小时硬是没想出来，爆0。QAQ<br>
后来下午问了朱神<br>
下面是关于此题的做法：</p>
<blockquote>
<p>首先对于每一个 p[i]，从 i 向 p[i] 连一条有向边。<br>
那么题目就可以转化为：改变其中最少的边，从 0 开始遍历图上所有的点然后回到 0，使得该路线的字典序最小<br>
然后我们将每一个环（除了包含0的那个环，暂且称之为初始环）中最小的点放入一个队列中，每次将初始环中下一位与队首进行比较，如果队首更小就连出去遍历所有环再回来，反之则比较下一位。</p>
</blockquote>
<p><strong>T4</strong>：贪心 + 一点点跑图<br>
<s>莫名其妙地过了大样例</s><br>
分析：<strong>对于每一个点，它地出度一定为 1。</strong><br>
于是我们先统计每一个点的入度 in[i]，然后考虑贪心，如果一个点入读为 0，那这个点是一定不能扔到世界中去的，必须拿在手中，那么我们将该点所限制的点扔到世界中就一定是最优的。</p>
<blockquote>
<p>（因为这个被扔到世界中的点最多也只能限制一个点，若它被拿在手中也只能将它所限制的唯一一个点扔出，而这样反而浪费了之前这个入读为 0 的点 —— 它被拿在手中而且毫无贡献。）</p>
</blockquote>
<p>接下来我们就找出所有入度为 0 的点，将它们全部拿在手中，并扔出所有它们所限制的点，并将 其限制点 <strong>所限制 的 点 的 入度</strong> 减一，并判断该点入度是否为 0。<br>
进行以上操作之后，就只剩下若干个环，而对于每一个环，我们发现最多只能扔出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⌊</mo><mfrac><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><mn>2</mn></mfrac><mo>⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor \frac{size}{2} \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.200664em;vertical-align:-0.345em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.855664em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span></span></span></span> 个点，于是接下来我们遍历每一个环，并得到每一个环的大小 size，对答案加上 size / 2 的贡献。</p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>下午貌似就调了一下考试题，写了T3和T4的题解。。。<br>
然后晚上继续数位DP（搞数位dp的最后一天。做了一些道题。写了一篇题解（详情见<strong>做题记录</strong></p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.21学习总结]]></title>
        <id>https://IceFake.github.io/post/RhBLYRA7D/</id>
        <link href="https://IceFake.github.io/post/RhBLYRA7D/">
        </link>
        <updated>2020-10-21T14:30:19.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>100 + 0 + 0 + 0 = 100</p>
<p>T1：暴搜。。。<br>
其实是可以被卡掉的。。。sta貌似也能被卡。。。<br>
考后被hack了QAQ</p>
<p>T2：比较水的一道题。。。<br>
读入打错了，<code>while(n = read)</code>当没有输入数的时候还是无法跳出循环<br>
以后还是用<code>whlle(scanf(&quot;%lld&quot;, &amp;n))</code>好了。。。</p>
<p>T3：最短路<br>
几乎就是一道最短路的板子。。。<br>
可是我挂了。。。</p>
<p>T4：dp + 组合数</p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>下午对T1代码进行剪枝。。。对于极限数据终于卡进了60s。。。</p>
<p>然后晚上继续练习数位dp，练习记录写在<strong>做题记录</strong>里面。</p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.20学习总结]]></title>
        <id>https://IceFake.github.io/post/jFk3V_m5x/</id>
        <link href="https://IceFake.github.io/post/jFk3V_m5x/">
        </link>
        <updated>2020-10-20T03:46:06.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>100 + 60 + 60 + 100 = 320</p>
<p>T1：hash + map 暴力过了。。。<br>
大概20min写完了。。。<br>
总所周知，<code>long long</code> 的自然溢出是 <s>很可靠的</s> 。。。<br>
<img src="https://s1.ax1x.com/2020/10/20/BSLcXq.png" alt="" loading="lazy"></p>
<p>T2：筛素数。<br>
20min写完了，过了大数据就没怎么管，结果交上去TLE4个点，才发现筛数写挂了。。。</p>
<p>T3：二位前缀和。。。<br>
写了2个小时。。。（码力不行QAQ<br>
然后没据统计点的时候没有在原矩形中，于是WA了四个点。。。<br>
更正的时后多开了一个 $4000 \times 4000 $ 的 bool 数组。。。然后被卡空间了。<br>
最后去掉了 <code>#define int long long</code> 才过。<br>
以后一定要注意空间，不能总是 <code>#define int long long</code> 。。。</p>
<p>T4：记录每条边的贡献就差不多了。<br>
对于每一个子节点所对应的边i，它所产生的贡献为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>×</mo><mo>(</mo><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>[</mo><mn>1</mn><mo>]</mo><mo>−</mo><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>)</mo><mo>×</mo><mi>w</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">size[i] \times (size[1] - size[i]) \times w[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> ，先计算出总和，然后每次更新对应边的贡献变化就行了。<br>
这个题。。。看到树上两点之间的最短路的时候有点懵，（树上两点之间不是只有一条路嘛。。。<br>
不过想明白之后15min左右就写出来了。</p>
<p>总结：感觉今天的题都还好，都在能力范围左右，但可惜挂了好几个点QAQ。<br>
<strong>以后算时间还要记得算空间！！！</strong></p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>学习数位dp<br>
写了几道数位dp，详情见“做题记录”<br>
对于P2602 [ZJOI2010]数字计数差不多已经有做法了，明天写掉。<br>
决定明天再搞一天的数位dp。</p>
<p>晚上打了一场 CF 的 Div.3（ <s>猝死场</s><br>
90min左右才写完ABCDEF。。。最后30min也没把G做出来。（ <s>我好菜</s><br>
主要都是考思维。</p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.19学习总结]]></title>
        <id>https://IceFake.github.io/post/PfLN7-IsG/</id>
        <link href="https://IceFake.github.io/post/PfLN7-IsG/">
        </link>
        <updated>2020-10-19T06:22:02.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>100 + 100 + 80 + 0 = 280</p>
<p>T1：暴力。。。<br>
先找到每种颜色最中间的点，然后向两端找靠近的点，直到不能swap为止，每种颜色查找完后更新Max。</p>
<p>T2：线性dp。<br>
上午考试的时候调了2个小时，后面才发现是dp。。。<br>
对于每一位有无雷，进行dp，用dp1表示当前位置是雷的情况，dp01表示当前位置不是雷但下一位必须是雷的情况，用dp00表示当前位置不是雷并且下一位置也不是雷的情况，然后进行转移。</p>
<p>T3： <s>双指针。。。</s> 还没调出来QAQ，不过 Xinxie 预处理过掉了，然后 lqs 正反两遍dp也过了。。。<br>
上午花了20min写了，结果WA了两个点，之后下午调双指针调了2个半小时，被 Xinxie Hack 了七八组数据。。。最后晚上放弃了双指针。。。</p>
<p>T4：用树状数组维护前缀和。<br>
T2花的时间太多了，最后只剩下10min看T4。。。</p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>下午全调考试题去了。。。</p>
<p>晚上写了几道单调队列优化<br>
然后被一道题卡住了：<br>
P4296 [AHOI2007]密码箱<br>
后来和 Xinxie 讨论了一会儿也没讨论出来，看了题解才稍微明白一点<br>
可以将题目中的公式变形为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>)</mo><mo>(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>=</mo><mi>k</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">(x + 1)(x - 1) = k\times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> ，然后将 n 分解为 a * b，枚举 a，而 a 是小于等于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mi>n</mi></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span> 的，所以复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>2</mn><mo>×</mo><msqrt><mi>n</mi></msqrt><mo>)</mo></mrow><annotation encoding="application/x-tex">O(2\times \sqrt{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.05028em;vertical-align:-0.25em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的。</p>
<p>发现了一个之前没用过的STL—— <code>nth_element(a + 1, a + k, a + n)</code><br>
可以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 地查询第K小。</p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.18学习总结]]></title>
        <id>https://IceFake.github.io/post/lXsJPKXwr/</id>
        <link href="https://IceFake.github.io/post/lXsJPKXwr/">
        </link>
        <updated>2020-10-18T13:58:59.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于上午">关于上午。。。</h2>
<p>咕咕咕，sleep<br>
醒来就11：50了。。。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mi>A</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">QAQ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mord mathdefault">A</span><span class="mord mathdefault">Q</span></span></span></span></p>
<h2 id="下午">下午。。。</h2>
<p>去看牙齿，折腾了一下午。。。<br>
不过在等的时候口胡了一下luogu月赛的T1，看了下T2，暂时没有思考。</p>
<h2 id="晚上">晚上</h2>
<p>到机房的时候CF只剩30分钟了QAQ，再次错过一场Div.2。。。</p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>晚上的时候写了几道分块和二分答案的题。。。<br>
然后被推荐了一道分块的交互题CF1406E，今天差不多弄明白了做法：<br>
小于100000的素数大约有9500个，所以我们只需要对这些素数进行分块，每个进行一次B操作，然后对于每个块进行一遍A操作。<br>
打算明天把代码敲出来。</p>
<p>明天早上迎接新难度的考试</p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.17学习总结]]></title>
        <id>https://IceFake.github.io/post/F40la38-Y/</id>
        <link href="https://IceFake.github.io/post/F40la38-Y/">
        </link>
        <updated>2020-10-17T06:43:39.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>关于分数： 95 + 90 + 100 + 80</p>
<p><strong>T1</strong>：先 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n\times m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 预处理出每条线上的“青蛙”总数，然后再扫一遍找到最小值。<br>
一定要记得判边界QAQ<br>
一开始刚打这道题代码的时候，还定义了一个bool变量判边界，还赋值了，结果最后输出结果的时候忘记判了。。。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>w</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">awa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">a</span></span></span></span></p>
<p><strong>T2</strong>： 二分答案，然后加亿点点贪心。<br>
不过要注意是从0点跳到n+1而不是n，这里我又挂掉了10pts。。。又是边界问题。。。</p>
<p><strong>T3</strong>：唯一一道过了的题QAQ（感动）</p>
<p><strong>T4</strong>：背包dp + 一点点转化 + 二分 + 离线操作。<br>
听说<strong>朱神</strong>好像没有离线也过了，还跑得很快。QAQ（好像是把dp数组开成二维的（毕竟n比较小<br>
考试的时候先是打了个40pts的背包。。。<br>
然后突然发现如果将其按照时间排序可以优化掉一层循环，于是就加了离线，60pts。<br>
然后发现v和c互换就可以进行正常的背包dp，于是改了一下并加了一个<strong>upper_bound</strong>查找ans。<br>
本来是可以过的。。。但是我貌似把背包dp最里面的一层循环的上界开大了，于是——就超时了，改小之后就过了。。。</p>
<p><strong>考试总结</strong>：别的不说，边界问题一定要注意！！！这次是挂了15pts，数据强一点或者捆绑测试说不定就无了。。。</p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>下午写了几道二分。。。但好像把分块给咕掉了，明天放假的话，可以把分块补一下。<br>
晚上本来想打CF的，但九点半还没到家，就只后来稍微看了下题，交了一道题的代码，打算有时间就把剩下几道题中能力范围左右的题写了。<br>
总的来说今天的状态还可以，希望能够每天保持。</p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.16学习总结]]></title>
        <id>https://IceFake.github.io/post/HPu_AwROT/</id>
        <link href="https://IceFake.github.io/post/HPu_AwROT/">
        </link>
        <updated>2020-10-16T08:04:47.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>0 + 100 + 0 + 10</p>
<p><strong>T1</strong>：应该算是贪心。<br>
考试的时候，凭感觉进行贪心，写了大概20min，然后一举通过大样例，结果交上去全WA。QAQ<br>
下午更正的时候更正了30min，才发现错在一个break打成了continue。。。<br>
以后不能过了大样例就不检查了。。。同时自己还可以造几个特殊一点的数据测试程序。</p>
<p><strong>T2</strong>：找规律，没什么好说的。</p>
<p><strong>T3</strong>：单调栈+二分，也可以用线段树。。。<br>
更正了1个多小时，才写出来，然后还是懵的，后来又想了好久才明白。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>w</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">awa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">a</span></span></span></span></p>
<p><strong>T4</strong>：并查集，一个区间没有贡献当且仅当它能被其他区间所表示。<br>
考场上用了2个小时写这道题，想的是一个大概是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>m</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(m^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的做法，然后用线段树应该是可以优化到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>m</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>m</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(m logm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span> 的，结果判断区间贡献的方法错了，然后就挂成10pts。（ <s>竟然还有10pts</s><br>
我觉得线段树真的可以做。。。（虽然写了2个小时 + 后来想了30min 都没写出来）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>w</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">awa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">a</span></span></span></span></p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p><a href="https://blog.csdn.net/qq_41713256/article/details/80805338">拓扑排序</a></p>
<p>更新了一下拓扑排序的代码（写法）</p>
<pre><code class="language-cpp">Rep(i,1,n) if(!in[i]) q.push(i);
while(!q.empty()) {
    int x = q.front(); q.pop();
    ans[++ tot] = x;
    for(int i = head[x]; i ; i = f[i].nxt) {
        int v = f[i].to; dec(in[v]);
        if(!in[v]) q.push(v);  
    }
}
if(tot == n) Rep(i,1,tot) printf(&quot;%lld &quot;, ans[i]);
else printf(&quot;No Answer!&quot;);
</code></pre>
<p>写了三道拓扑排序的板题，感觉还行，有两道都是一遍编译过并且AC。</p>
<p>在CF上找了一道最近的比赛中的dp题写保持感觉。。。</p>
<p>然后，复习了一点点数论知识。<br>
重新证明了一遍欧拉定理（感觉没啥用QAQ<br>
于是，我成功地忘记了今天要复习SPAF和Floyd来着。。。（下次一定 不会了）</p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10.15学习总结]]></title>
        <id>https://IceFake.github.io/post/BdHj7-8JE/</id>
        <link href="https://IceFake.github.io/post/BdHj7-8JE/">
        </link>
        <updated>2020-10-15T08:27:09.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于考试">关于考试</h2>
<p>只有T1和T2有分，170，rank11垫底QAQ</p>
<p><strong>T1</strong>：前缀和+递推，忘记用前缀和了。。。但貌似用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> + 优化 + （ <s>dabiao</s> ）能过90。。。</p>
<p><strong>T2</strong>：联通图的暴力遍历</p>
<p><strong>T3</strong>：最短路径树之类的。。。 <s>6个月没怎么写图论题了，连dijkstra都忘记怎么写了</s> （逃<br>
这道题先用dijkstra跑一遍单源最短路，然后判断哪些边改变会对最短路有影响，并且优先“公路”。</p>
<p><strong>T4</strong>：dp，然而考场上并没有想出来，然后就——GG了。。。</p>
<p>然后突然发现昨天的T3貌似看错题了。。。（但是过了？<br>
重新写了一遍昨天的T3，发现我昨天想复杂了。。。</p>
<h2 id="练习记录">练习记录</h2>
<p><a href="https://icefake.github.io/post/xg59kcjww/">做题记录</a></p>
<p>想了两道CF2000分左右的思维题（ <s>但是还没写完，只想出了做法QAQ</s> ）</p>
<h2 id="总结">总结</h2>
<p>更正题目的时间有点久QAQ<br>
然后就是考试数据比较水，过了不一定代表对了，因此就算是过了的题也可以交流一下做法，或者是在各个OJ上找到相似的题目提交检验。</p>
<p>意识到自己还有很多板子题没怎么打过，练了几道数据结构的板子题。<br>
然后写了一道线段树练手。</p>
<p><strong>已复习知识点：栈，单源最短路（Dijkstra）</strong></p>
<h2 id="计划">计划</h2>
<p><a href="https://www.luogu.com.cn/training/28919">这里右拐</a></p>
]]></content>
    </entry>
</feed>